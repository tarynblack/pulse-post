 function userinputparameters
%USERINPUTPARAMETERS defines values for an instance of post-processing. 
%   
%   This file allows the user to define values that are not automatically
%   generated by the post-processing code and may vary between simulations
%   and users. Includes file paths, physical constants, figure properties,
%   display settings, and file read settings.
%
%   Last edit: Taryn Black, 24 June 2016

% ======================================================================= %

%   Global variables that are defined
    global DATAPATH SAVEPATH POSTPATH
    global TIME_START TIME_STOP
    global PLUME_EDGE CHARACTERISTIC_EPG R_GAS MU_G0 g GHOSTCELLS_IJK
    global IMAGE_SAVE_TYPE VIEW3D_AZIMUTH VIEW3D_ELEVATION ...
        NUMTICKLABELS_XYZ SCALE_FACTOR_XYZ LABEL_UNIT_XYZ SLICE_LOCATION_XYZ
    global EPG_ISOSURFACE_EDGE EPG_ISOSURFACE_COLOR EPG_ISOSURFACE_TRANSPARENCY
    global COLORRANGE_ENTRAINMENT COLORRANGE_PARTICLE_CONCENTRATION ...
        COLORRANGE_BULK_DENSITY COLORRANGE_RELATIVE_DENSITY ...
        COLORRANGE_GAS_TEMPERATURE COLORRANGE_VELOCITY COLORRANGE_VORTICITY ...
        COLORRANGE_MASS_FLUX
    global READ_EPG FILENAME_EPG READ_EPS1 FILENAME_EPS1 ...
        READ_EPS2 FILENAME_EPS2 READ_EPS3 FILENAME_EPS3 READ_TG ...
        FILENAME_TG READ_ROG FILENAME_ROG READ_UG FILENAME_UG READ_VG ...
        FILENAME_VG READ_WG FILENAME_WG READ_VS1 FILENAME_VS1 READ_VS2 ...
        FILENAME_VS2 READ_VS3 FILENAME_VS3

    
%%  SET FILE PATHS
%   Path to directory containing simulation files that need to be processed
    DATAPATH = 'C:/Users/taryn/Documents/GitHub/pulse-post/testdata';
  
%   Path to directory where post-processing output will be saved
    SAVEPATH = 'C:/Users/taryn/OneDrive/Documents/testdata';
  
%   Path to directory containing the suite of post-processing scripts
    POSTPATH = 'C:/Users/taryn/Documents/GitHub/pulse-post';
% ----------------------------------------------------------------------- %


%%  DEFINE CONSTANTS
%   Start and stop times (seconds) for animations. Must be multiples of the
%   timestep value DT. Use [] to process all timesteps.
    TIME_START = 0;
    TIME_STOP = 300;

%   Gas volume fraction that defines the boundary of the plume
    PLUME_EDGE = 1 - 1E-6;
  
%   Gas volume fraction (EPG) at which to calculate characteristic (choked)
%   velocity for unsteady flow case. Options: 'minimumEPG', 'maximumEPG',
%   'averageEPG'
    CHARACTERISTIC_EPG = 'minimumEPG';
  
%   Ideal gas constant for water vapor [J/kg.K]
    R_GAS = 461.5;
  
%   Gas viscosity [Pa.s]
    MU_G0 = 1E-5;
  
%   Gravitational acceleration on Earth [m/s2]
    g = 9.81;
    
%   Simulation ghostcells in the x, y, and z directtions
    GHOSTCELLS_IJK = [4 4 4];
% ----------------------------------------------------------------------- %


%%  FIGURE PROPERTIES SETTINGS
%   Set figure defaults
    set(0,'DefaultFigurePaperPositionMode','auto',...
        'DefaultFigureColor','w',...
        'DefaultFigureVisible','on',...
        'DefaultFigureUnits','centimeters',...
        'DefaultAxesBox','on',...
        'DefaultAxesTickDir','in',...
        'DefaultAxesFontSize',12,...
        'DefaultAxesFontWeight','bold',...
        'DefaultAxesXGrid','on',...
        'DefaultAxesYGrid','on',...
        'DefaultAxesZGrid','on');
  
%   Save each animation timestep as an individual figure of a specified
%   filetype. Options: tif, jpeg, png, bmp, etc.
    IMAGE_SAVE_TYPE = 'tif';
  
%   Viewing azimuth and elevation (in degrees) for 3D animations
    VIEW3D_AZIMUTH = -37.5;
    VIEW3D_ELEVATION = 20;
  
%   Number of tick labels to display on axes for each dimension
%   X = horizontal axis 1; Y = vertical axis; Z = horizontal axis 2
    NUMTICKLABELS_XYZ = [5 11 5];
  
%   Scaling factor (meters*_) and unit for axes labels
    SCALE_FACTOR_XYZ = [1000 1000 1000];
    LABEL_UNIT_XYZ = {'km';'km';'km'};
    
%   Slice distance along X/Y/Z axis for 3D-slice figures. Value represents
%   the fraction along the axis at which to cut the slice (0 to 1).
%   NOTE: can only slice along one axis; use NaN for other two axes.
    SLICE_LOCATION_XYZ = [0.5 NaN NaN];
% ----------------------------------------------------------------------- %


%%  FIGURE CALCULATION AND DISPLAY SETTINGS
%   Define isosurfaces for which gas volume fraction (EPG) should be
%   plotted. Set an RGB color triplet (one RGB-triplet per row) and
%   transparency value (between 0 and 1) for each isosurface.
    EPG_ISOSURFACE_EDGE = PLUME_EDGE;
    EPG_ISOSURFACE_COLOR = [0.7 0.7 0.7];
    EPG_ISOSURFACE_TRANSPARENCY = 0.7;
  
%   Altitudes [in meters] at which to calculate the vertical mass flux. To
%   include the script-calculated jet height, include one NaN in the
%   vector.
    MASS_FLUX_ALTITUDES = [0 8000 4000 NaN];

%   COLORRANGE LIMITS
%   Entrainment (must be between -1 and 1)
    COLORRANGE_ENTRAINMENT = [-0.5 0.5]; 
%   Particle concentration (log scale; must be less than 0)
    COLORRANGE_PARTICLE_CONCENTRATION = [-6 -3];
%   Flow density [kg/m3]
    COLORRANGE_BULK_DENSITY = [0 4];
%   Relative density of flow (atmospheric density minus flow density)
    COLORRANGE_RELATIVE_DENSITY = [-1 1];
%   Gas temperature [K]. Set second value to NaN to replace with maximum
%   simulated gas temperature.
    COLORRANGE_GAS_TEMPERATURE = [300 NaN];
%   Magnitude of velocity [m/s]
    COLORRANGE_VELOCITY = [0 300];
%   Vorticity [1/s]
    COLORRANGE_VORTICITY = [-20 20];
%   Mass flux [kg/m2.s]
    COLORRANGE_MASS_FLUX = [-1E5 1E5];
% ----------------------------------------------------------------------- %


%%  FILE READ TYPES AND NAMES
%   readtype == 1 :  file was originally written in binary, and was
%   converted to ascii using convert_Pulse.f90. Name prefix is
%   {*}_t%02d.txt.
%   readtype == 2 :  file was originally written in ascii and exists as a
%   single file instead of as pre-separated timesteps. Name is
%   {originalname}.
%   FILENAME_* format :  {'readtype=1 prefix' 'readtype=2 name'}

    READ_EPG  = 1;
    FILENAME_EPG = {'EP' 'EP_Ga'};
    
    READ_EPS1  = 1;
    FILENAME_EPS1 = {'EP' ''};
    READ_EPS2  = 1;
    FILENAME_EPS2 = {'EP' ''};
    READ_EPS3  = 1;
    FILENAME_EPS3 = {'EP' ''};
    
    READ_TG   = 1;
    FILENAME_TG  = {'T_G' 'T_Ga'};
    
    READ_ROG  = 1;
    FILENAME_ROG = {'Current_Density' 'RO_Ga'};
    
    READ_UG  = 2;
    FILENAME_UG = {'U_G' 'U_Ga'};
    READ_VG  = 1;
    FILENAME_VG = {'U_G' 'V_Ga'};
    READ_WG  = 2;
    FILENAME_WG = {'U_G' 'W_Ga'};
    
    READ_VS1  = 1;
    FILENAME_VS1 = {'V_S' 'V_S1a'};
    READ_VS2  = 1;
    FILENAME_VS2 = {'V_S' 'V_S2a'};
    READ_VS3  = 1;
    FILENAME_VS3 = {'V_S' 'V_S3a'};
% ----------------------------------------------------------------------- %    
    
%% ===================================================================== %%
end

